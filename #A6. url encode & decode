A. Umum :
1. URL Encode dan URL Decode adalah proses yang digunakan untuk memastikan data dalam URL dapat ditransmisikan dengan benar melalui internet. 
---------------------------------------------------------------------------------
2. Ini penting karena URL memiliki batasan apda karakter-karakter yang dapat digunakan.
---------------------------------------------------------------------------------





B. URL Encode (Encoding) :
1. URL Encode : Proses mengonversi karakter yang tidak aman atau tidak valid dalam URL menjadi format yang dapat diterima. 
---------------------------------------------------------------------------------
2. Dalam URL, beberapa karakter memiliki arti khusus (misalnya, ?, &, /, =) atau tidak diizinkan (misalnya, spasi), sehingga perlu di-encode agar tidak menimbulkan kesalahan dalam proses pengiriman data.
---------------------------------------------------------------------------------
3. Cara kerja URL Encode :
*  Setiap karakter yang tidak aman diubah menjadi representasi % diikuti oleh dua digit heksadesimal yabg mewakili nilai ASCII dari karakter tersebut.
---------------------------------------------------------------------------------
*  Misalnya, spasi (karakter yang tidak valid dalam URL) di-encode menjadi %20.
---------------------------------------------------------------------------------
4. Contoh URL Encode :
*  Kalimat : Hello World!
*  Setelah di-encode : Hello%20World#21
*  Penjelasan :
** (spasi) diubah menjadi %20
** ! diubah menjadi %21
---------------------------------------------------------------------------------
5. Penggunaan URL Encode: URL Encode digunakan saat kita ingin mengirim data melalui URL, misalnya dalam Query String atau form data dalam GET/POST request. 
*  Dengan encoding, kita memastikan bahwa data diterima dengan benar oleh server.
---------------------------------------------------------------------------------





C. URL Decode (Decoding) : 
1. URL Decode adalah proses kebalikan dari URL Encode, yaitu mengonversi kembali data yang telah di-encode menjadi bentuk aslinya. 
---------------------------------------------------------------------------------
2. Ini berguna saat server atau aplikasi menerima data yang di-encode dan perlu mengembalikannya ke bentuk semula untuk diolah lebih lanjut.
---------------------------------------------------------------------------------
3. Cara kerja URL Decode : 
*  URL Decode membaca setiap pasangan % diikuti oleh dua digit heksadesimal dan mengonversinya kembali ke karakter aslinya.
*  Misalnya, %20 di-decode menjadi spasi ( )
---------------------------------------------------------------------------------
4. Contoh URL Decode :
*  String : Hello%20World%21
*  Setelah di-decode : Hello World!
---------------------------------------------------------------------------------
5. Penggunaan URL Decode: URL Decode digunakan di sisi penerima, misalnya oleh server saat menerima data dari URL yang di-encode. 
*  Ini memastikan bahwa data yang diterima dapat dibaca dan digunakan dengan benar. 
---------------------------------------------------------------------------------




D. Mengapa URL Encoding dan Decoding Penting?
1. Keamanan dan Keandalan: URL Encoding memastikan bahwa semua data dalam URL diinterpretasikan dengan benar oleh browser atau server, tanpa konflik dengan karakter yang memiliki arti khusus dalam URL.
---------------------------------------------------------------------------------
2. Penggunaan Karakter Spesial: Beberapa karakter, seperti &, =, dan ?, memiliki makna khusus dalam URL (misalnya, memisahkan parameter dalam Query String). 
---------------------------------------------------------------------------------
3. URL Encoding memungkinkan penggunaan karakter ini dalam data tanpa mengubah struktur URL.
---------------------------------------------------------------------------------





E. Contoh Kode URL Encoding dan Decoding di JavaScript:
1. URL Encoding :
<----
let encodedUrl = encodeURIComponent("Hello World!");
console.log(encodedUrl); // Output: Hello%20World%21
---->
---------------------------------------------------------------------------------
2. URL Decoding :
<----
let decodedUrl = decodeURIComponent("Hello%20World%21");
console.log(decodedUrl); // Output: Hello World!
---->
---------------------------------------------------------------------------------


F. Kesimpulan:
1. URL Encode mengonversi karakter yang tidak aman atau tidak valid menjadi format yang aman untuk URL.
---------------------------------------------------------------------------------
2. URL Decode mengonversi kembali data yang telah di-encode ke bentuk aslinya.
---------------------------------------------------------------------------------
3. Proses ini penting untuk memastikan data ditransmisikan dengan benar melalui URL tanpa masalah terkait karakter yang tidak valid.
---------------------------------------------------------------------------------















